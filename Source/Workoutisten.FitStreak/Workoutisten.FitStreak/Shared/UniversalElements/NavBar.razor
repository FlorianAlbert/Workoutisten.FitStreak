@inject CustomAuthenticationStateProvider _AuthenticationStateProvider
@inject NavigationManager _NavManager

<MudGrid Class="py-4 my-4">
    <MudAppBar Elevation="1" Color="Color.Dark">
        <MudImage Src="Images/fitstreak_logo_white.svg" Width="160" Height="50"></MudImage>
        <MudSpacer/>
        <NotificationButton/>
        <MudAvatar Class="ml-5" Color="Color.Primary"><MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" OnClick="@ToggleDrawer" /></MudAvatar>
    </MudAppBar>
    <MudDrawer @bind-Open="@openDrawer" Elevation="1" Anchor="Anchor.End" ClipMode="DrawerClipMode.Always">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">FitStreak</MudText>
        </MudDrawerHeader>
        <MudNavMenu Color="Color.Primary">
            <MudNavLink Href="/profile" Icon="@Icons.Filled.AccountCircle"><MudText>Profile</MudText></MudNavLink>
            <MudNavLink Href="/settings" Icon="@Icons.Filled.Settings">Settings</MudNavLink>
            <MudNavLink Href="/about" Icon="@Icons.Filled.Info">About</MudNavLink>
            <MudSpacer/>
            <MudNavLink OnClick="LogOut_Button" Icon="@Icons.Filled.Logout">Log Out</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
</MudGrid>


@code{
    bool openDrawer = false;
    bool openNotification = false;

    void ToggleDrawer()
    {
        openDrawer = !openDrawer;
    }

    void ToggleNotification()
    {
        openNotification = !openNotification;
    }

    async void LogOut_Button()
    {
        await _AuthenticationStateProvider.Logout();
        _NavManager.NavigateTo("/");
    }
}