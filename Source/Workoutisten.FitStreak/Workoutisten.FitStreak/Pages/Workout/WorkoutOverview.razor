
@using Workoutisten.FitStreak.Client.RestClient
@using Workoutisten.FitStreak.Data.Models.Workout

@page "/workouts/overview"

@inject IRestClient _RestClient
@inject NavigationManager _NavManager

<MudPaper Class="rounded-xl p-2 my-3">
    <MudStack AlignItems="AlignItems.Center" Justify="Justify.FlexStart">
        <MudText Typo="Typo.h4">@Workout.WorkoutName</MudText>
        <MudText Align="Align.Start" Typo="Typo.subtitle2">@Workout.Exercises.Count Exercises</MudText>
        <FitStreakButton Label="START" OnClick="StartWorkout" />
    </MudStack>

    <MudDivider Style="padding: 2px" Class="Foreground: white mb-1 mt-1" />


    <MudList>
        @foreach (var exercise in Workout.Exercises)
        {
            <ExerciseListElement Category="exercise.Category" Name="@exercise.Name" />
        }
    </MudList>
</MudPaper>



@code {

    [Parameter]
    [SupplyParameterFromQuery(Name = "workout")]
    public Guid? WorkoutGuid { get; set; }

    public WorkoutModel Workout { get; set; } = new WorkoutModel();

    protected override void OnInitialized()
    {
        //Workout anhand der WorkoutGuid initialisieren

        #region toDelete
        Workout.WorkoutName = "Workout 1";
        for (int i = 0; i < 5; i++)
        {
            Workout.Exercises.Add(new ExerciseModel()
                {
                    Name = $"Exercise {i}",
                    Category = ExerciseCategoryEnum.Strength
                });
        }
        #endregion
        base.OnInitialized();
    }

    void StartWorkout()
    {
        _NavManager.NavigateTo("/exercises/overview");
    }
}
