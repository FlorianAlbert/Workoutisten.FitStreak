@using Workoutisten.FitStreak.Pages.Dialogs
@using Workoutisten.FitStreak.Shared.PageExclusives.WorkoutsPage
@page "/workouts"

@inject IDialogService DialogService

<MudStack>
    <MudGrid>
        <MudItem xs="10">
            <MudTextField @bind-Value="SearchInput" Label="Suchen" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Search" AdornmentColor="Color.Dark" />
        </MudItem>
        <MudItem xs="2" Class="d-flex align-center justify-center">
            <MudIconButton Variant="Variant.Filled" Icon="@Icons.Filled.Add" Color="Color.Secondary" OnClick="AddNewWorkout"></MudIconButton>
        </MudItem>
    </MudGrid>

    <MudList>
        <WorkoutListElement Description="Lorem Ipsum" LastTraining="01.01.2022" Title="Workout-1" /> @*In die OnInitialized packen*@
        <WorkoutListElement Description="Lorem Ipsum" LastTraining="01.01.2022" Title="Workout-2" />
        <WorkoutListElement Description="Lorem Ipsum" LastTraining="01.01.2022" Title="Workout-3" />
        <WorkoutListElement Description="Lorem Ipsum" LastTraining="01.01.2022" Title="Workout-4" LastElement="true" />
    </MudList>
</MudStack>


@code {

    string SearchInput { get; set; }

    List<WorkoutModel> UserWorkouts { get; set; }

    protected override void OnInitialized()
    {
        UserWorkouts = new List<WorkoutModel>();

        base.OnInitialized();
    }

    async void AddNewWorkout()
    {
        var options = new DialogOptions { 
            CloseOnEscapeKey = true, 
            CloseButton = true,
            FullWidth = true,
        };
        var DialogReference = DialogService.Show<AddWorkoutDialog>("New Workout: ", options);

        UserWorkouts.Add((WorkoutModel)(await DialogReference.Result).Data);

        //UserExercises.Add((ExerciseModel)(await DialogReference.Result).Data); TBD

        StateHasChanged();

    }
}
